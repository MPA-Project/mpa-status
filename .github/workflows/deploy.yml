name: Deploy

on:
  push:
    branches:
      - main
  repository_dispatch:
  schedule:
    - cron: '0 0 1 * *'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14
    - run: yarn install
    - run: yarn build
      env:
        NODE_ENV: production
    - name: Publish
      uses: cloudflare/wrangler-action@1.3.0
      with:
        apiToken: ${{ secrets.CF_API_TOKEN }}
        preCommands: |
          wrangler kv:namespace create KV_STATUS_PAGE
          apt-get update && apt-get install -y jq
          export KV_NAMESPACE_ID=$(wrangler kv:namespace list | jq -c 'map(select(.title | contains("KV_STATUS_PAGE")))' | jq -r ".[0].id")
          echo "[env.production]" >> wrangler.toml
          echo "kv_namespaces = [{binding=\"KV_STATUS_PAGE\", id=\"${KV_NAMESPACE_ID}\"}]" >> wrangler.toml
          [ -z "$SECRET_SLACK_WEBHOOK_URL" ] && echo "Secret SECRET_SLACK_WEBHOOK_URL not set, creating dummy one..." && SECRET_SLACK_WEBHOOK_URL="default-gh-action-secret" || true
          [ -z "$SECRET_TELEGRAM_API_TOKEN" ] && echo "Secret SECRET_TELEGRAM_API_TOKEN not set, creating dummy one..." && SECRET_TELEGRAM_API_TOKEN="default-gh-action-secret" || true
          [ -z "$SECRET_TELEGRAM_CHAT_ID" ] && echo "Secret SECRET_TELEGRAM_CHAT_ID not set, creating dummy one..." && SECRET_TELEGRAM_CHAT_ID="default-gh-action-secret" || true
          [ -z "$SECRET_DISCORD_WEBHOOK_URL" ] && echo "Secret SECRET_DISCORD_WEBHOOK_URL not set, creating dummy one..." && SECRET_DISCORD_WEBHOOK_URL="default-gh-action-secret" || true
          [ -z "$AWS_S3_ENDPOINT" ] && echo "Secret AWS_S3_ENDPOINT not set, creating dummy one..." && AWS_S3_ENDPOINT="default-gh-action-secret" || true
          [ -z "$AWS_S3_REGION" ] && echo "Secret AWS_S3_REGION not set, creating dummy one..." && AWS_S3_REGION="default-gh-action-secret" || true
          [ -z "$AWS_S3_BUCKET" ] && echo "Secret AWS_S3_BUCKET not set, creating dummy one..." && AWS_S3_BUCKET="default-gh-action-secret" || true
          [ -z "$AWS_S3_ACCESS_KEY" ] && echo "Secret AWS_S3_ACCESS_KEY not set, creating dummy one..." && AWS_S3_ACCESS_KEY="default-gh-action-secret" || true
          [ -z "$AWS_S3_SECRET_KEY" ] && echo "Secret AWS_S3_SECRET_KEY not set, creating dummy one..." && AWS_S3_SECRET_KEY="default-gh-action-secret" || true
          [ -z "$STORE_FILENAME" ] && echo "Secret STORE_FILENAME not set, creating dummy one..." && STORE_FILENAME="default-gh-action-secret" || true
          [ -z "$LOG_DNA_INGESTION" ] && echo "Secret LOG_DNA_INGESTION not set, creating dummy one..." && LOG_DNA_INGESTION="default-gh-action-secret" || true
        # postCommands: |
        #   yarn kv-gc
        secrets: |
          SECRET_SLACK_WEBHOOK_URL
          SECRET_TELEGRAM_API_TOKEN
          SECRET_TELEGRAM_CHAT_ID
          SECRET_DISCORD_WEBHOOK_URL
          AWS_S3_ENDPOINT
          AWS_S3_REGION
          AWS_S3_BUCKET
          AWS_S3_ACCESS_KEY
          AWS_S3_SECRET_KEY
          STORE_FILENAME
          LOG_DNA_INGESTION
        environment: production
      env:
        CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
        SECRET_SLACK_WEBHOOK_URL: ${{secrets.SECRET_SLACK_WEBHOOK_URL}}
        SECRET_TELEGRAM_API_TOKEN: ${{secrets.SECRET_TELEGRAM_API_TOKEN}}
        SECRET_TELEGRAM_CHAT_ID: ${{secrets.SECRET_TELEGRAM_CHAT_ID}}
        SECRET_DISCORD_WEBHOOK_URL: ${{secrets.SECRET_DISCORD_WEBHOOK_URL}}
        AWS_S3_ENDPOINT: ${{secrets.AWS_S3_ENDPOINT}}
        AWS_S3_REGION: ${{secrets.AWS_S3_REGION}}
        AWS_S3_BUCKET: ${{secrets.AWS_S3_BUCKET}}
        AWS_S3_ACCESS_KEY: ${{secrets.AWS_S3_ACCESS_KEY}}
        AWS_S3_SECRET_KEY: ${{secrets.AWS_S3_SECRET_KEY}}
        STORE_FILENAME: ${{secrets.STORE_FILENAME}}
        LOG_DNA_INGESTION: ${{secrets.LOG_DNA_INGESTION}}
